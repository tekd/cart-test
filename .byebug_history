!exit
exit
@cart
!exit
get_cart_total_cost(@cart_items)
get_cart_total_quantity(@cart_items)
@cart_total
!exit
get_cart_total_cost(@cart_items)
get_cart_total_cost
@cart_items.map {|x|arr << x.product.price}
arr
@cart_items.map {|x|arr << x.product.price}
arr
arr.sum(:price)
arr
@cart_items.map {|x|arr << x.product}
arr = []
!exit
prod = @cart_items.products
@cart_items.products.sum(:quantity)
@cart_items.sum(:quantity)
@cart_items.map {|x|(x.quantity* x.product.price)}
@cart_items.map {|x|total_costs << (x.quantity)}
@cart_items.map {|x|total_costs += (x.quantity)}
    end
      total_cost += (item.quantity * item.product.price)
@cart_items.each do |item|
total_cost
total_cost = 0
@cart_items
get_cart_total_quantity(@cart_items)
@cart_total
!exit
@cart_items.each {|x|p x.product.price}
@cart_items.each {|x|p x.price}
@cart_items.each {|x|p x.quantity}
total_cost = 0
get_cart_total_quantity(@cart_items)
@cart_total
@cart_items
!exit
  end
    total_cost
    end
      total_cost += (item.quantity * item.price)
    cart_items.each do |item|
    total_cost = 0
  def get_cart_total_cost(cart_items)
@cart_items.pluck(:product_id)
@cart_items
@cart_items.sum(:price)
@cart_items.sum(:quantity)
@cart_items = CartProduct.where(cart_id:@cart.id).order(created_at: 'ASC')
@cart
!exit
@cart
exit
params
!exit
cart = CartProduct()
cart
cart.products.first
cart.products.all
cart.products
cart
item
exit
cart.products
cart
item.quantity +=1
item.quantity
item
cart
exit
item = CartProduct.find_by(product_id:params[:product_id])
item.quantity
item.name
item
item = Product.find(params[:product_id])
item
params
!exit
params
